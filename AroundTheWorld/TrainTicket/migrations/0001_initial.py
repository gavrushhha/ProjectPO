# Generated by Django 4.0.3 on 2022-05-30 07:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name_city', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'db_table': 'content"."city',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, verbose_name='username')),
                ('docs', models.CharField(max_length=11, verbose_name='docs')),
                ('email', models.EmailField(max_length=255, verbose_name='email')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'person',
                'db_table': 'content"."person',
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('школьники', 'School'), ('студенты', 'Students'), ('дети', 'Children'), ('ветераны', 'Veterans'), ('пенсионеры', 'Pensioners'), ('люди с ограниченными возможностями', 'Persons With Disabilities')], max_length=255, verbose_name='category')),
                ('discount', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='discount')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='description')),
            ],
            options={
                'verbose_name': 'privilege',
                'verbose_name_plural': 'privileges',
                'db_table': 'content"."privilege',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('price', models.FloatField(blank=True, verbose_name='price')),
                ('is_optional', models.BooleanField(blank=True, verbose_name='optional')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'db_table': 'content"."service',
            },
        ),
        migrations.CreateModel(
            name='Service_to_Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.FloatField(blank=True, verbose_name='price')),
                ('place', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(54)], verbose_name='place')),
            ],
            options={
                'verbose_name': 'ticket',
                'verbose_name_plural': 'tickets',
                'db_table': 'content"."ticket',
            },
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'train',
                'verbose_name_plural': 'trains',
                'db_table': 'content"."train',
            },
        ),
        migrations.CreateModel(
            name='Wagon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='wagon')),
                ('class_wagon', models.CharField(choices=[('плацкарт', 'Reserved Seat'), ('купе', 'Coupe'), ('СВ', 'Sw')], max_length=255, verbose_name='class')),
                ('capacity', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(54)], verbose_name='capacity')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_wagon', to='TrainTicket.train', verbose_name='train')),
            ],
            options={
                'verbose_name': 'wagon',
                'verbose_name_plural': 'wagons',
                'db_table': 'content"."wagon',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('way_departure', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='way_departure')),
                ('way_arrival', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='way_arrival')),
                ('time_departure', models.DateTimeField()),
                ('time_arrival', models.DateTimeField()),
                ('city_arrival', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_arrival', to='TrainTicket.city', verbose_name='city_arrival')),
                ('city_departure', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_departure', to='TrainTicket.city', verbose_name='city_departure')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train', to='TrainTicket.train', verbose_name='train')),
            ],
            options={
                'verbose_name': 'trip',
                'verbose_name_plural': 'trips',
                'db_table': 'content"."trip',
            },
        ),
        migrations.AddConstraint(
            model_name='train',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_train'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='priv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privilege', to='TrainTicket.privilege', verbose_name='privilege'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip', to='TrainTicket.trip', verbose_name='trip'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person', to='TrainTicket.person', verbose_name='person'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='wagon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wagon', to='TrainTicket.wagon', verbose_name='wagon'),
        ),
        migrations.AddField(
            model_name='service_to_ticket',
            name='service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainTicket.service'),
        ),
        migrations.AddField(
            model_name='service_to_ticket',
            name='ticket_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainTicket.ticket'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(fields=('name', 'price'), name='unique_service'),
        ),
        migrations.AddConstraint(
            model_name='privilege',
            constraint=models.UniqueConstraint(fields=('category', 'discount'), name='unique_privilege'),
        ),
        migrations.AddConstraint(
            model_name='person',
            constraint=models.UniqueConstraint(fields=('username', 'docs'), name='unique_user'),
        ),
        migrations.AddConstraint(
            model_name='city',
            constraint=models.UniqueConstraint(fields=('name_city',), name='unique_city'),
        ),
        migrations.AddConstraint(
            model_name='wagon',
            constraint=models.UniqueConstraint(fields=('train_id', 'name'), name='unique_wagon'),
        ),
        migrations.AddConstraint(
            model_name='trip',
            constraint=models.UniqueConstraint(fields=('train_id', 'city_departure', 'city_arrival'), name='unique_trip'),
        ),
        migrations.AddConstraint(
            model_name='ticket',
            constraint=models.UniqueConstraint(fields=('wagon', 'trip', 'place'), name='unique_ticket'),
        ),
    ]
