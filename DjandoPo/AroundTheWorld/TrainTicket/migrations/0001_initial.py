# Generated by Django 4.0.4 on 2022-05-16 11:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name_city', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'db_table': 'content"."city',
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255, verbose_name='category')),
                ('discount', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='discount')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
                ('tariff', models.CharField(max_length=255, verbose_name='tariff')),
            ],
            options={
                'verbose_name': 'privilege',
                'verbose_name_plural': 'privileges',
                'db_table': 'content"."privilege',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('price', models.FloatField(blank=True, verbose_name='price')),
                ('is_optional', models.BooleanField(blank=True, verbose_name='optional')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'db_table': 'content"."service',
            },
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'train',
                'verbose_name_plural': 'trains',
                'db_table': 'content"."train',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255, verbose_name='full_name')),
                ('docs', models.CharField(max_length=255, verbose_name='docs')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'content"."user',
            },
        ),
        migrations.CreateModel(
            name='Wagon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='wagon')),
                ('class_wagon', models.CharField(max_length=255, verbose_name='class')),
                ('capacity', models.IntegerField(blank=True, verbose_name='capacity')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_wagon', to='TrainTicket.train', verbose_name='train')),
            ],
            options={
                'verbose_name': 'wagon',
                'verbose_name_plural': 'wagons',
                'db_table': 'content"."wagon',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('way_departure', models.IntegerField(blank=True, verbose_name='way_departure')),
                ('way_arrival', models.IntegerField(blank=True, verbose_name='way_arrival')),
                ('time_departure', models.DateTimeField(auto_now_add=True)),
                ('time_arrival', models.DateTimeField(auto_now_add=True)),
                ('city_arrival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_arrival', to='TrainTicket.city', verbose_name='city_arrival')),
                ('city_departure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_departure', to='TrainTicket.city', verbose_name='city_departure')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_trip+', to='TrainTicket.train')),
            ],
            options={
                'verbose_name': 'trip',
                'verbose_name_plural': 'trips',
                'db_table': 'content"."trip',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.FloatField(blank=True, verbose_name='price')),
                ('availability', models.BooleanField(blank=True, verbose_name='availability')),
                ('place', models.IntegerField(blank=True, verbose_name='place')),
                ('priv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privilege', to='TrainTicket.privilege', verbose_name='privilege')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip', to='TrainTicket.trip', verbose_name='trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='TrainTicket.user', verbose_name='user')),
                ('wagon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wagon', to='TrainTicket.wagon', verbose_name='wagon')),
            ],
            options={
                'verbose_name': 'ticket',
                'verbose_name_plural': 'tickets',
                'db_table': 'content"."ticket',
            },
        ),
        migrations.CreateModel(
            name='Service_to_Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainTicket.service')),
                ('ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainTicket.ticket')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
